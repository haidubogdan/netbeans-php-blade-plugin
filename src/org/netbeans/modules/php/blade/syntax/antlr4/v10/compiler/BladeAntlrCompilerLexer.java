// Generated from BladeAntlrCompilerLexer.g4 by ANTLR 4.13.0

  package org.netbeans.modules.php.blade.syntax.antlr4.v10.compiler;

import org.antlr.v4.runtime.Lexer;
import org.antlr.v4.runtime.CharStream;
import org.antlr.v4.runtime.Token;
import org.antlr.v4.runtime.TokenStream;
import org.antlr.v4.runtime.*;
import org.antlr.v4.runtime.atn.*;
import org.antlr.v4.runtime.dfa.DFA;
import org.antlr.v4.runtime.misc.*;

@SuppressWarnings({"all", "warnings", "unchecked", "unused", "cast", "CheckReturnValue"})
public class BladeAntlrCompilerLexer extends LexerAdaptor {
	static { RuntimeMetaData.checkVersion("4.13.0", RuntimeMetaData.VERSION); }

	protected static final DFA[] _decisionToDFA;
	protected static final PredictionContextCache _sharedContextCache =
		new PredictionContextCache();
	public static final int
		HTML=1, PHP_CODE=2, PHP_INLINE=3, D_IF=4, D_PHP=5, OTHER=6, D_ENDPHP=7;
	public static final int
		COMMENT=2;
	public static final int
		BLADE_INLINE_PHP=1;
	public static String[] channelNames = {
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN", "COMMENT"
	};

	public static String[] modeNames = {
		"DEFAULT_MODE", "BLADE_INLINE_PHP"
	};

	private static String[] makeRuleNames() {
		return new String[] {
			"PHP_INLINE", "D_ESCAPES", "D_IF", "D_PHP", "OTHER", "D_ENDPHP", "PHP_CODE_GREEDY", 
			"PHP_CODE_COMPLETION"
		};
	}
	public static final String[] ruleNames = makeRuleNames();

	private static String[] makeLiteralNames() {
		return new String[] {
			null, null, null, null, "'@if'", null, null, "'@endphp'"
		};
	}
	private static final String[] _LITERAL_NAMES = makeLiteralNames();
	private static String[] makeSymbolicNames() {
		return new String[] {
			null, "HTML", "PHP_CODE", "PHP_INLINE", "D_IF", "D_PHP", "OTHER", "D_ENDPHP"
		};
	}
	private static final String[] _SYMBOLIC_NAMES = makeSymbolicNames();
	public static final Vocabulary VOCABULARY = new VocabularyImpl(_LITERAL_NAMES, _SYMBOLIC_NAMES);

	/**
	 * @deprecated Use {@link #VOCABULARY} instead.
	 */
	@Deprecated
	public static final String[] tokenNames;
	static {
		tokenNames = new String[_SYMBOLIC_NAMES.length];
		for (int i = 0; i < tokenNames.length; i++) {
			tokenNames[i] = VOCABULARY.getLiteralName(i);
			if (tokenNames[i] == null) {
				tokenNames[i] = VOCABULARY.getSymbolicName(i);
			}

			if (tokenNames[i] == null) {
				tokenNames[i] = "<INVALID>";
			}
		}
	}

	@Override
	@Deprecated
	public String[] getTokenNames() {
		return tokenNames;
	}

	@Override

	public Vocabulary getVocabulary() {
		return VOCABULARY;
	}


	public BladeAntlrCompilerLexer(CharStream input) {
		super(input);
		_interp = new LexerATNSimulator(this,_ATN,_decisionToDFA,_sharedContextCache);
	}

	@Override
	public String getGrammarFileName() { return "BladeAntlrCompilerLexer.g4"; }

	@Override
	public String[] getRuleNames() { return ruleNames; }

	@Override
	public String getSerializedATN() { return _serializedATN; }

	@Override
	public String[] getChannelNames() { return channelNames; }

	@Override
	public String[] getModeNames() { return modeNames; }

	@Override
	public ATN getATN() { return _ATN; }

	@Override
	public boolean sempred(RuleContext _localctx, int ruleIndex, int predIndex) {
		switch (ruleIndex) {
		case 3:
			return D_PHP_sempred((RuleContext)_localctx, predIndex);
		}
		return true;
	}
	private boolean D_PHP_sempred(RuleContext _localctx, int predIndex) {
		switch (predIndex) {
		case 0:
			return this._input.LA(1) == ' ' || this._input.LA(1) == '\n';
		}
		return true;
	}

	public static final String _serializedATN =
		"\u0004\u0000\u0007\u00cd\u0006\uffff\uffff\u0006\uffff\uffff\u0002\u0000"+
		"\u0007\u0000\u0002\u0001\u0007\u0001\u0002\u0002\u0007\u0002\u0002\u0003"+
		"\u0007\u0003\u0002\u0004\u0007\u0004\u0002\u0005\u0007\u0005\u0002\u0006"+
		"\u0007\u0006\u0002\u0007\u0007\u0007\u0001\u0000\u0001\u0000\u0001\u0000"+
		"\u0001\u0000\u0001\u0000\u0005\u0000\u0018\b\u0000\n\u0000\f\u0000\u001b"+
		"\t\u0000\u0001\u0000\u0001\u0000\u0001\u0000\u0001\u0000\u0001\u0000\u0001"+
		"\u0000\u0001\u0000\u0001\u0000\u0001\u0000\u0005\u0000&\b\u0000\n\u0000"+
		"\f\u0000)\t\u0000\u0001\u0000\u0001\u0000\u0003\u0000-\b\u0000\u0001\u0001"+
		"\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001"+
		"\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001"+
		"\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001"+
		"\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001"+
		"\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001"+
		"\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001"+
		"\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001"+
		"\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001"+
		"\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001"+
		"\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001"+
		"\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001"+
		"\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001"+
		"\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001"+
		"\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001"+
		"\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001"+
		"\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001"+
		"\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001"+
		"\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001"+
		"\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001"+
		"\u0001\u0001\u0001\u0001\u0003\u0001\u00a4\b\u0001\u0001\u0001\u0001\u0001"+
		"\u0001\u0002\u0001\u0002\u0001\u0002\u0001\u0002\u0001\u0003\u0001\u0003"+
		"\u0001\u0003\u0001\u0003\u0001\u0003\u0001\u0003\u0001\u0003\u0001\u0003"+
		"\u0001\u0003\u0001\u0004\u0001\u0004\u0001\u0004\u0001\u0004\u0001\u0005"+
		"\u0001\u0005\u0001\u0005\u0001\u0005\u0001\u0005\u0001\u0005\u0001\u0005"+
		"\u0001\u0005\u0001\u0005\u0001\u0005\u0001\u0006\u0004\u0006\u00c4\b\u0006"+
		"\u000b\u0006\f\u0006\u00c5\u0001\u0006\u0001\u0006\u0001\u0007\u0001\u0007"+
		"\u0001\u0007\u0001\u0007\u0002\u0019\'\u0000\b\u0002\u0003\u0004\u0000"+
		"\u0006\u0004\b\u0005\n\u0006\f\u0007\u000e\u0000\u0010\u0000\u0002\u0000"+
		"\u0001\u0001\u0001\u0000@@\u00dd\u0000\u0002\u0001\u0000\u0000\u0000\u0000"+
		"\u0004\u0001\u0000\u0000\u0000\u0000\u0006\u0001\u0000\u0000\u0000\u0000"+
		"\b\u0001\u0000\u0000\u0000\u0000\n\u0001\u0000\u0000\u0000\u0001\f\u0001"+
		"\u0000\u0000\u0000\u0001\u000e\u0001\u0000\u0000\u0000\u0001\u0010\u0001"+
		"\u0000\u0000\u0000\u0002,\u0001\u0000\u0000\u0000\u0004\u00a3\u0001\u0000"+
		"\u0000\u0000\u0006\u00a7\u0001\u0000\u0000\u0000\b\u00ab\u0001\u0000\u0000"+
		"\u0000\n\u00b4\u0001\u0000\u0000\u0000\f\u00b8\u0001\u0000\u0000\u0000"+
		"\u000e\u00c3\u0001\u0000\u0000\u0000\u0010\u00c9\u0001\u0000\u0000\u0000"+
		"\u0012\u0013\u0005<\u0000\u0000\u0013\u0014\u0005?\u0000\u0000\u0014\u0015"+
		"\u0005=\u0000\u0000\u0015\u0019\u0001\u0000\u0000\u0000\u0016\u0018\t"+
		"\u0000\u0000\u0000\u0017\u0016\u0001\u0000\u0000\u0000\u0018\u001b\u0001"+
		"\u0000\u0000\u0000\u0019\u001a\u0001\u0000\u0000\u0000\u0019\u0017\u0001"+
		"\u0000\u0000\u0000\u001a\u001c\u0001\u0000\u0000\u0000\u001b\u0019\u0001"+
		"\u0000\u0000\u0000\u001c\u001d\u0005?\u0000\u0000\u001d-\u0005>\u0000"+
		"\u0000\u001e\u001f\u0005<\u0000\u0000\u001f \u0005?\u0000\u0000 !\u0005"+
		"p\u0000\u0000!\"\u0005h\u0000\u0000\"#\u0005p\u0000\u0000#\'\u0001\u0000"+
		"\u0000\u0000$&\t\u0000\u0000\u0000%$\u0001\u0000\u0000\u0000&)\u0001\u0000"+
		"\u0000\u0000\'(\u0001\u0000\u0000\u0000\'%\u0001\u0000\u0000\u0000(*\u0001"+
		"\u0000\u0000\u0000)\'\u0001\u0000\u0000\u0000*+\u0005?\u0000\u0000+-\u0005"+
		">\u0000\u0000,\u0012\u0001\u0000\u0000\u0000,\u001e\u0001\u0000\u0000"+
		"\u0000-\u0003\u0001\u0000\u0000\u0000./\u0005@\u0000\u0000/\u00a4\u0005"+
		"@\u0000\u000001\u0005@\u0000\u00001\u00a4\u0005{\u0000\u000023\u0005@"+
		"\u0000\u000034\u0005m\u0000\u000045\u0005e\u0000\u000056\u0005d\u0000"+
		"\u000067\u0005i\u0000\u00007\u00a4\u0005a\u0000\u000089\u0005@\u0000\u0000"+
		"9:\u0005c\u0000\u0000:;\u0005h\u0000\u0000;<\u0005a\u0000\u0000<=\u0005"+
		"r\u0000\u0000=>\u0005s\u0000\u0000>?\u0005e\u0000\u0000?\u00a4\u0005t"+
		"\u0000\u0000@A\u0005@\u0000\u0000AB\u0005i\u0000\u0000BC\u0005m\u0000"+
		"\u0000CD\u0005p\u0000\u0000DE\u0005o\u0000\u0000EF\u0005r\u0000\u0000"+
		"F\u00a4\u0005t\u0000\u0000GH\u0005@\u0000\u0000HI\u0005n\u0000\u0000I"+
		"J\u0005a\u0000\u0000JK\u0005m\u0000\u0000KL\u0005e\u0000\u0000LM\u0005"+
		"s\u0000\u0000MN\u0005p\u0000\u0000NO\u0005a\u0000\u0000OP\u0005c\u0000"+
		"\u0000P\u00a4\u0005e\u0000\u0000QR\u0005@\u0000\u0000RS\u0005d\u0000\u0000"+
		"ST\u0005o\u0000\u0000TU\u0005c\u0000\u0000UV\u0005u\u0000\u0000VW\u0005"+
		"m\u0000\u0000WX\u0005e\u0000\u0000XY\u0005n\u0000\u0000Y\u00a4\u0005t"+
		"\u0000\u0000Z[\u0005@\u0000\u0000[\\\u0005f\u0000\u0000\\]\u0005o\u0000"+
		"\u0000]^\u0005n\u0000\u0000^_\u0005t\u0000\u0000_`\u0005-\u0000\u0000"+
		"`a\u0005f\u0000\u0000ab\u0005a\u0000\u0000bc\u0005c\u0000\u0000c\u00a4"+
		"\u0005e\u0000\u0000de\u0005@\u0000\u0000ef\u0005p\u0000\u0000fg\u0005"+
		"a\u0000\u0000gh\u0005g\u0000\u0000h\u00a4\u0005e\u0000\u0000ij\u0005@"+
		"\u0000\u0000jk\u0005s\u0000\u0000kl\u0005u\u0000\u0000lm\u0005p\u0000"+
		"\u0000mn\u0005p\u0000\u0000no\u0005o\u0000\u0000op\u0005r\u0000\u0000"+
		"pq\u0005t\u0000\u0000q\u00a4\u0005s\u0000\u0000rs\u0005@\u0000\u0000s"+
		"t\u0005l\u0000\u0000tu\u0005a\u0000\u0000uv\u0005y\u0000\u0000vw\u0005"+
		"e\u0000\u0000w\u00a4\u0005r\u0000\u0000xy\u0005@\u0000\u0000yz\u0005t"+
		"\u0000\u0000z{\u0005a\u0000\u0000{|\u0005i\u0000\u0000|}\u0005l\u0000"+
		"\u0000}~\u0005w\u0000\u0000~\u007f\u0005i\u0000\u0000\u007f\u0080\u0005"+
		"n\u0000\u0000\u0080\u00a4\u0005d\u0000\u0000\u0081\u0082\u0005@\u0000"+
		"\u0000\u0082\u0083\u0005a\u0000\u0000\u0083\u0084\u0005p\u0000\u0000\u0084"+
		"\u0085\u0005p\u0000\u0000\u0085\u0086\u0005l\u0000\u0000\u0086\u00a4\u0005"+
		"y\u0000\u0000\u0087\u0088\u0005@\u0000\u0000\u0088\u0089\u0005-\u0000"+
		"\u0000\u0089\u008a\u0005w\u0000\u0000\u008a\u008b\u0005e\u0000\u0000\u008b"+
		"\u008c\u0005b\u0000\u0000\u008c\u008d\u0005k\u0000\u0000\u008d\u008e\u0005"+
		"i\u0000\u0000\u008e\u008f\u0005t\u0000\u0000\u008f\u0090\u0005-\u0000"+
		"\u0000\u0090\u0091\u0005k\u0000\u0000\u0091\u0092\u0005e\u0000\u0000\u0092"+
		"\u0093\u0005y\u0000\u0000\u0093\u0094\u0005f\u0000\u0000\u0094\u0095\u0005"+
		"r\u0000\u0000\u0095\u0096\u0005a\u0000\u0000\u0096\u0097\u0005m\u0000"+
		"\u0000\u0097\u0098\u0005e\u0000\u0000\u0098\u00a4\u0005s\u0000\u0000\u0099"+
		"\u009a\u0005@\u0000\u0000\u009a\u009b\u0005k\u0000\u0000\u009b\u009c\u0005"+
		"e\u0000\u0000\u009c\u009d\u0005y\u0000\u0000\u009d\u009e\u0005f\u0000"+
		"\u0000\u009e\u009f\u0005r\u0000\u0000\u009f\u00a0\u0005a\u0000\u0000\u00a0"+
		"\u00a1\u0005m\u0000\u0000\u00a1\u00a2\u0005e\u0000\u0000\u00a2\u00a4\u0005"+
		"s\u0000\u0000\u00a3.\u0001\u0000\u0000\u0000\u00a30\u0001\u0000\u0000"+
		"\u0000\u00a32\u0001\u0000\u0000\u0000\u00a38\u0001\u0000\u0000\u0000\u00a3"+
		"@\u0001\u0000\u0000\u0000\u00a3G\u0001\u0000\u0000\u0000\u00a3Q\u0001"+
		"\u0000\u0000\u0000\u00a3Z\u0001\u0000\u0000\u0000\u00a3d\u0001\u0000\u0000"+
		"\u0000\u00a3i\u0001\u0000\u0000\u0000\u00a3r\u0001\u0000\u0000\u0000\u00a3"+
		"x\u0001\u0000\u0000\u0000\u00a3\u0081\u0001\u0000\u0000\u0000\u00a3\u0087"+
		"\u0001\u0000\u0000\u0000\u00a3\u0099\u0001\u0000\u0000\u0000\u00a4\u00a5"+
		"\u0001\u0000\u0000\u0000\u00a5\u00a6\u0006\u0001\u0000\u0000\u00a6\u0005"+
		"\u0001\u0000\u0000\u0000\u00a7\u00a8\u0005@\u0000\u0000\u00a8\u00a9\u0005"+
		"i\u0000\u0000\u00a9\u00aa\u0005f\u0000\u0000\u00aa\u0007\u0001\u0000\u0000"+
		"\u0000\u00ab\u00ac\u0005@\u0000\u0000\u00ac\u00ad\u0005p\u0000\u0000\u00ad"+
		"\u00ae\u0005h\u0000\u0000\u00ae\u00af\u0005p\u0000\u0000\u00af\u00b0\u0001"+
		"\u0000\u0000\u0000\u00b0\u00b1\u0004\u0003\u0000\u0000\u00b1\u00b2\u0001"+
		"\u0000\u0000\u0000\u00b2\u00b3\u0006\u0003\u0001\u0000\u00b3\t\u0001\u0000"+
		"\u0000\u0000\u00b4\u00b5\t\u0000\u0000\u0000\u00b5\u00b6\u0001\u0000\u0000"+
		"\u0000\u00b6\u00b7\u0006\u0004\u0002\u0000\u00b7\u000b\u0001\u0000\u0000"+
		"\u0000\u00b8\u00b9\u0005@\u0000\u0000\u00b9\u00ba\u0005e\u0000\u0000\u00ba"+
		"\u00bb\u0005n\u0000\u0000\u00bb\u00bc\u0005d\u0000\u0000\u00bc\u00bd\u0005"+
		"p\u0000\u0000\u00bd\u00be\u0005h\u0000\u0000\u00be\u00bf\u0005p\u0000"+
		"\u0000\u00bf\u00c0\u0001\u0000\u0000\u0000\u00c0\u00c1\u0006\u0005\u0003"+
		"\u0000\u00c1\r\u0001\u0000\u0000\u0000\u00c2\u00c4\b\u0000\u0000\u0000"+
		"\u00c3\u00c2\u0001\u0000\u0000\u0000\u00c4\u00c5\u0001\u0000\u0000\u0000"+
		"\u00c5\u00c3\u0001\u0000\u0000\u0000\u00c5\u00c6\u0001\u0000\u0000\u0000"+
		"\u00c6\u00c7\u0001\u0000\u0000\u0000\u00c7\u00c8\u0006\u0006\u0004\u0000"+
		"\u00c8\u000f\u0001\u0000\u0000\u0000\u00c9\u00ca\t\u0000\u0000\u0000\u00ca"+
		"\u00cb\u0001\u0000\u0000\u0000\u00cb\u00cc\u0006\u0007\u0004\u0000\u00cc"+
		"\u0011\u0001\u0000\u0000\u0000\u0007\u0000\u0001\u0019\',\u00a3\u00c5"+
		"\u0005\u0007\u0001\u0000\u0005\u0001\u0000\u0006\u0000\u0000\u0004\u0000"+
		"\u0000\u0007\u0002\u0000";
	public static final ATN _ATN =
		new ATNDeserializer().deserialize(_serializedATN.toCharArray());
	static {
		_decisionToDFA = new DFA[_ATN.getNumberOfDecisions()];
		for (int i = 0; i < _ATN.getNumberOfDecisions(); i++) {
			_decisionToDFA[i] = new DFA(_ATN.getDecisionState(i), i);
		}
	}
}